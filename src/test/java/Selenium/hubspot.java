package Selenium;// Generated by Selenium IDE
import io.github.bonigarcia.wdm.WebDriverManager;
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.interactions.SourceType;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.*;
import java.util.concurrent.TimeUnit;

public class hubspot {
    private WebDriver driver;
    private Map<String, Object> vars;
    JavascriptExecutor js;

    @Before
    public void setUp() {
        WebDriverManager.chromedriver().setup();
        driver = new ChromeDriver();
        js = (JavascriptExecutor) driver;
        vars = new HashMap<String, Object>();
    }

    @After
    public void tearDown() {
        driver.quit();
    }

    @Test
    public void example() throws IOException {
        Actions actions = new Actions(driver);

        driver.manage().timeouts().implicitlyWait(20, TimeUnit.SECONDS);
       String URL = "https://ecosystem.hubspot.com/marketplace/apps/sales/sales-enablement/gmail";
       String URL1 = "https://ecosystem.hubspot.com/marketplace/apps/sales/sales-enablement/office365";
       String URL2 ="https://ecosystem.hubspot.com/marketplace/apps/sales/sales-enablement/proposify-hubspot";
       String URL3 ="https://ecosystem.hubspot.com/marketplace/apps/sales/sales-enablement/outlook-exchange-data-sync";

        driver.get(URL2);
        driver.manage().window().maximize();
        String test = driver.findElement(By.xpath("//*[text()='Next']/..")).getAttribute("aria-disabled");
        System.out.println(test);
        List<String> list = new ArrayList<>();
        List<String> dateList = new ArrayList<>();
        List<String> ratingList = new ArrayList<>();
        List<String> hubspotCombined = new ArrayList<>();
        while (test.equals("false")) {
            test = driver.findElement(By.xpath("//*[text()='Next']/..")).getAttribute("aria-disabled");
            List<WebElement> reviews = driver.findElements(By.xpath("//*[@id=\"reviews\"]/div/div/div/div[2]/div/div[4]/div/div/div/div[2]/div[2]/span/span"));


            for (WebElement webElement : reviews) {
                String review = webElement.getText().replaceAll(",", "");
                System.out.println(review);
                list.add(review);
            }
            driver.manage().timeouts().implicitlyWait(5, TimeUnit.SECONDS);

            List<WebElement> dates = driver.findElements(By.xpath("//*[@id=\"reviews\"]/div/div/div/div[2]/div/div[4]/div/div/div/div[1]/div/span/span"));
            for (WebElement webElement : dates){
                    String date = webElement.getText().replaceAll(",", "");;
                    System.out.println(date);
                    dateList.add(date);
                }

            List<WebElement> ratings = driver.findElements(By.xpath("//*[@id=\"reviews\"]/div/div/div/div[2]/div/div[4]/div/div/div/div[1]/div/div"));
            //*[@id="reviews"]/div/div/div/div[2]/div/div[4]/div/div/div[1]/div[1]/div/div
            //*[@id="reviews"]/div/div/div/div[2]/div/div[4]/div/div/div[2]/div[1]/div/div
            for (WebElement webElement: ratings){
                String rating = webElement.getAttribute("aria-valuetext");
                System.out.println(rating);
                ratingList.add(rating);
            }



            js.executeScript("window.scrollTo(0, document.body.scrollHeight)");
            driver.manage().timeouts().implicitlyWait(4, TimeUnit.SECONDS);
            actions.moveToElement(driver.findElement(By.xpath("//button/*[text()='Next']"))).build().perform();
            //driver.manage().timeouts().implicitlyWait(8, TimeUnit.SECONDS);
            driver.findElement(By.xpath("//button/*[text()='Next']")).click();
            try {
                Thread.sleep(500);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }



            FileWriter writer = new FileWriter("hubspot.txt");

            for (String str : list) {
                writer.write(str  + System.lineSeparator()+","+ System.lineSeparator()  );

            }
            writer.close();
            FileWriter dateWriter = new FileWriter("hubspotDates.txt");

            for (String str : dateList) {
                dateWriter.write(str  +","+ System.lineSeparator()  );

            }
            dateWriter.close();
            FileWriter ratingWriter = new FileWriter("hubspotRating.txt");
            for (String str: ratingList){
                ratingWriter.write(str  +","+ System.lineSeparator()  );

            }
            ratingWriter.close();


            for (int i=0;i<(list.size()) ;i++){

                String finalReview = list.get(i);
                String finalRating = ratingList.get(i);
                String finalDate = dateList.get(i);
                hubspotCombined.add(finalReview);
                hubspotCombined.add(finalRating);
                hubspotCombined.add(finalDate);
            }



        }
        File file = new File("hubspotCombined.csv");
        FileWriter fw = new FileWriter(file);
        BufferedWriter bw = new BufferedWriter(fw);
        bw.write("User Review,Star Rating,Date");
        bw.newLine();
        for(int i=0;i<(list.size());i++)
        {
            bw.write(list.get(i)+","+ratingList.get(i)+","+dateList.get(i));
            bw.newLine();
        }
        bw.close();
        fw.close();

        }
    }



